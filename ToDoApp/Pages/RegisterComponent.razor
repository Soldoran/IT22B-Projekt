
@using ToDoApp.Klassen
@inject ApplicationDbContext DbContext

<h3>Neuen Nutzer Registrieren</h3>

@* Hier wurde Beispielhaft eine Eingabemaske ohne Komponenten der Radzen Bibliothek umgesetzt, um zu demonstrieren wie man eine Eigene Komponente erstellen könnte*@
<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <label>Name</label>
    <InputText @bind-Value="registerModel.Username" placeholder="Username" />
    <br />
    <br />
    <label>Passwort</label>
    <InputText @bind-Value="registerModel.Password" type="password" placeholder="Password" />
    <br />
    <br />
    <button type="submit" onclick="@HandleRegister()" class="m-3 p-3 col-1">Register</button>
</EditForm>

<p>@loginMessage</p>

@code {
    private Userclass registerModel = new Userclass();
    private string? loginMessage;

    /// <summary>
    /// Überprüft ob der Name bereits in der Datenbank vorhanden ist. Wenn kein Nutzer gefunden wurde, wird ein neuer Nutzer mit den angegebenen Werten erstellt und in der Datenbank angelegt.
    /// Sollte bereits ein Nutzer mit dem Namen existieren, wird der Nutzer darauf hingewiesen und es wird kein neuer Nutzer erstellt oder bestehnder verändert.
    /// </summary>
    /// <returns></returns>
    private async Task HandleRegister()
    {
        Userclass? registeredUser = DbContext.Userclasses.Where(u => u.Username == registerModel.Username).FirstOrDefault();

        if (registeredUser == null)
        {
            DbContext.Userclasses.Add(registerModel);
            loginMessage = "User created!";
            await DbContext.SaveChangesAsync();
            registerModel = new Userclass();
        }
        else
        {
            loginMessage = $"There is already a User with the Name  \"{registerModel.Username}\"";
        }
    }
}