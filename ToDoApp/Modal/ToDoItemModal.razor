@page "/newItem"
@using ToDoApp.Klassen
@using Microsoft.EntityFrameworkCore
@inject Radzen.DialogService dialogService
@inject Radzen.NotificationService notificationService
@inject Radzen.ContextMenuService contextMenuService
@inject Radzen.NotificationService radzenNotification
@inject Radzen.TooltipService tooltipService
@inject ApplicationDbContext DbContext

@if (ToDoItem.Id > 0)
{
    isNewItem = false;
}
else
{

}

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>Titel</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="Titel" @bind-Value="@ToDoItem.Title" ReadOnly="false" />
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>To Dino ID</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="To Dino ID" Value="@ToDoItem.Id.ToString()" ReadOnly="true">Test</RadzenTextBox>
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>Erstelldatum</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="Erstellt am" Value="@ToDoItem.CreationDate.ToString()" ReadOnly="true"></RadzenTextBox>
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>Enddatum</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="Beenden am" Value="@ToDoItem.DueDate.ToString()" ReadOnly="true"></RadzenTextBox>
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>Kategorie</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="Kategorie" @bind-Value="@ToDoItem.Category" ReadOnly="false"></RadzenTextBox>
    </RadzenColumn>
</RadzenRow>

<RadzenRow JustifyContent="@justifyContent" Gap="@gap" RowGap="@gap">
    <RadzenColumn>
        <RadzenText>Ersteller</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextBox Name="Erstell von" @bind-Value="@ToDoItem.Owner" ReadOnly="false"></RadzenTextBox>
    </RadzenColumn>
</RadzenRow>

<RadzenRow>
    <RadzenColumn>
        <RadzenText>Beschreibung</RadzenText>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenTextArea Name="Beschreibung" @bind-Value="@ToDoItem.Description" ReadOnly="false"></RadzenTextArea>
    </RadzenColumn>
</RadzenRow>

<RadzenStack>
    <RadzenRow>
        <RadzenColumn>
            <RadzenButton Click="@((args) =>SaveItem())" Variant="Variant.Flat" Text="Speichern" Style="width: 120px" />
        </RadzenColumn>
        <RadzenColumn>
            <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="Abbrechen" Style="width: 120px" />
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

@code {
    bool isNewItem = true;

    [Parameter]
    [EditorRequired]
    public ToDoItem ToDoItem { get; set; }

    JustifyContent justifyContent = JustifyContent.Normal;
    string gap = "1rem";

    private async Task SaveItem()
    {
        if (isNewItem)
        {
            DbContext.ToDoItems.Add(ToDoItem);
        }
        else
        {
            DbContext.ToDoItems.Update(ToDoItem);
        }
        await DbContext.SaveChangesAsync();
        dialogService.Close(true);
    }
}
